name: Analysis & Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  pylint:
    runs-on: ubuntu-latest

    steps:
      - name: Setup OS dependency
        run: |
          sudo apt-get -y install xorg libxkbcommon0
      - uses: actions/checkout@v3
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install virtualenv
          python -m virtualenv .virtualenv
          source .virtualenv/bin/activate
          python -m pip install -r requirements.txt
          python -m pip install --upgrade pylint
      - name: Code analysis with pylint
        run: |
          source .virtualenv/bin/activate
          python -m pylint --version
          python -m pylint budgetter -j 0 --rcfile=pylintrc --output=pylint_analysis.txt --output-format=colorized
      - name: Set pylint score
        run: |
          echo "PYLINT_SCORE=`tail -n 2 pylint_analysis.txt | awk '/^Your/ {print $7}' | awk -F'/' '{print $1}'`" >> $GITHUB_ENV
        shell: bash
      - name: Display pylint analysis result
        run: |
          cat pylint_analysis.txt
        shell: bash
      - name: Creating dynamic badge
        uses: Schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: da061024a6dc8c3dcaf32f4e79abf032
          filename: pylint.json
          label: pylint
          message: "${{ env.PYLINT_SCORE }}/10"
          valColorRange: ${{ env.PYLINT_SCORE }}
          maxColorRange: 10
          minColorRange: 0
  mypy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install virtualenv
          python -m virtualenv .virtualenv
          source .virtualenv/bin/activate
          python -m pip install -r requirements.txt
          python -m pip install lxml
          python -m pip install --upgrade mypy
      - name: Checking types with mypy
        run: |
          source .virtualenv/bin/activate
          python -m mypy --version
          python -m mypy budgetter --install-types --non-interactive > mypy_analysis.txt  || true
      - name: Display mypy analysis result
        run: |
          cat mypy_analysis.txt
        shell: bash
      - name: Creating dynamic badge
        uses: Schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: da061024a6dc8c3dcaf32f4e79abf032
          filename: mypy.json
          label: mypy
          message: types checked
          color: "#2a6db2"
  bandit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install virtualenv
          python -m virtualenv .virtualenv
          source .virtualenv/bin/activate
          python -m pip install -r requirements.txt
          python -m pip install bandit
      - name: Checking vulnerabilities with bandit
        run: |
          source .virtualenv/bin/activate
          python -m bandit --version
          python -m bandit budgetter
      - name: Creating dynamic badge
        uses: Schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: da061024a6dc8c3dcaf32f4e79abf032
          filename: bandit.json
          label: bandit
          message: bandit
          color: "#0ca40c"
