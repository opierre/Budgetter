name: Analysis & Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  pylint:
    runs-on: ubuntu-latest
    env:
      DISPLAY: ':99.0'

    steps:
      - name: Setup OS dependency
        run: |
          sudo apt install libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 x11-utils
          /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX
      - uses: actions/checkout@v3
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install virtualenv
          python -m virtualenv .virtualenv
          source .virtualenv/bin/activate
          which python
          whereis python
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install --upgrade pylint
          which pylint
          whereis pylint
      - name: Code analysis with pylint
        run: |
          source .virtualenv/bin/activate
          whereis pylint
          python -c "import PySide6"
          $(which pylint) --version
          $(which pylint) budgetter -j 0 --rcfile=pylintrc --output=pylint_analysis.txt --output-format=colorized
      - name: Set pylint score
        run: |
          echo "PYLINT_SCORE=`tail -n 2 pylint_analysis.txt | awk '/^Your/ {print $7}' | awk -F'/' '{print $1}'`" >> $GITHUB_ENV
        shell: bash
      - name: Display pylint analysis result
        run: |
          cat pylint_analysis.txt
        shell: bash
      - name: Creating dynamic badge
        uses: Schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: da061024a6dc8c3dcaf32f4e79abf032
          filename: pylint.json
          label: Pylint Rating
          message: "${{ env.PYLINT_SCORE }}/10"
          valColorRange: ${{ env.PYLINT_SCORE }}
          maxColorRange: 10
          minColorRange: 0
          namedLogo: Python
          logoColor: "#1f425f"
  mypy:
    runs-on: ubuntu-latest
    needs: pylint

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install lxml
          python -m pip install --upgrade mypy
      - name: Checking types with mypy
        run: |
          source .venv/bin/activate
          python -m mypy --version
          python -m mypy budgetter --install-types --non-interactive || true
      - name: Creating dynamic badge
        uses: Schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: da061024a6dc8c3dcaf32f4e79abf032
          filename: mypy.json
          label: mypy
          message: Types Checked
          color: "#0ca40c"
          namedLogo: Python
          logoColor: "#1f425f"
  bandit:
    runs-on: ubuntu-latest
    needs: mypy

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install bandit
      - name: Checking vulnerabilities with bandit
        run: |
          source .venv/bin/activate
          python -m bandit --version
          python -m bandit budgetter
      - name: Creating dynamic badge
        uses: Schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: da061024a6dc8c3dcaf32f4e79abf032
          filename: bandit.json
          label: bandit
          message: bandit
          color: "#0ca40c"
          namedLogo: Python
          logoColor: "#1f425f"
