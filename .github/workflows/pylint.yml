name: Pylint

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          # cache: "pip"
      - name: Install dependencies
        run: |
          choco install bat
          python -m venv .venv
          .venv/Scripts/activate
          echo "VIRTUAL_ENV=%VIRTUAL_ENV%" >> %GITHUB_ENV%
          echo "PYTHONPATH=%VIRTUAL_ENV" >> %GITHUB_ENV%
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install --upgrade pylint
      - name: Analysing the code with pylint
        run: |
          echo %PYTHONPATH%
          echo %VIRTUAL_ENV%
          .venv/Scripts/activate
          pip freeze
          pylint --version
          pylint ./budgetter -j 0 --rcfile=pylintrc --output=pylint_analysis.txt --output-format=colorized
          echo "PYLINT_SCORE=wsl -e tail -n 2 pylint_analysis.txt | wsl -e awk '/^Your/ {print $7}'" >> %GITHUB_ENV%
      - name: Creating environment
        run: |
          batcat pylint_analysis.txt
      - name: Creating dynamic badge
        uses: Schneegans/dynamic-badges-action@v1.4.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: da061024a6dc8c3dcaf32f4e79abf032
          filename: pylint.json
          label: Pylint Rating
          message: ${{ env.PYLINT_SCORE }}
          color: "${{ env.PYLINT_COLOR }}"
          namedLogo: Python
          logoColor: "#1f425f"
